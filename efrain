public void transformada2(int dimension, int valorElem) {
        String[][] matriz=new String[dimension][dimension];
        for (int f = 0; f < matriz.length; f++) {
            for (int c = 0; c < matriz[0].length; c++) {     
                if (c<dimension-f) {
                    matriz[f][c]=""+(valorElem+(c+f)*(c+f+1)/2 + c); 
                }else{
                    matriz[f][c]="";
                }                
            }
        }
        imprimirMatriz(matriz);
    }
    
public void transformada05(int dimen, int valInit) {
        String[][] matriz=new String[dimen][dimen];// f =filas, c=columnas
        for (int c = 0; f < matriz.length; f++) {
            for (int c = 0; c <= f; c++) {
                matriz[f][(dimen-1)-c]=""+valInit;
                valInit++;
            }
        }
        imprimirMatrizCadena(matriz);
    }

public void transformada06(int dimen, int numInit){
       String[][] matriz=new String[dimen][dimen];// f = Fila; c=Columna
        for (int f = 0; f < matriz.length; f++){
            for (int c = 0; c <= f; c++){
                matriz [i][c]=""+numInit;
                numInit++;
            }
        }
        extracted(matriz);
    }

    public void transformada07(int dimen, int numInit){
        String[][] matriz = new String[dimen][dimen];
        for (int f = 0; f < dimen; i++) {
            for (int c = 0 ; c < (dimen-f); c++) {
                matriz[f][c]=""+numInit;
                numInit++;
            }
        }
        extracted(matriz);
    }
    
    public void transformada08(int dimen, int numInit){
        String[][] matriz = new String[dimen][dimen];
        for (int i = 0; i < matriz.length; f++) {
            for (int c = 0; c <= (dimen-1)-i ; c++) {
                matriz[f][(c+f)]=" "+numInit;
                numInit++;
            }
        }
        extracted(matriz);
    }
    
public void transformada14(int dimen, int valInit) {
        String[][] matriz=new String[dimen][dimen];// f =filas, c=columnas
        for (int f = 0; f < matriz.length; f++) {
            for (int c = 0; c <= f; c++) {
                matriz[c][f]=""+valInit;
                valInit++;
            }
        }
        imprimirMatrizCadena(matriz);
    }
public void transformada16(int dimen, int valInit) {
       String[][] matriz=new String[dimen][dimen];// f =filas, c=columnas
       for (int f = 0; f < matriz.length; f++) {
            for (int c = 0; c <= f; c++) {
                matriz[(dimen-1)-c][f]=""+valInit;
                valInit++;
            }
        }
        imprimirMatrizCadena(matriz);
    }
 public void transformada20(int dimen, int numInit) {
            String[][] matriz=new String[dimen][dimen];// f = Fila; c=Columna
            for (int f = 0; f < matriz.length; f++) {
                for (int c = 0; c <=f; c++) {
                    matriz[(dimen-1)-c][(dimen-1)-f]=""+numInit;
                    numInit++;
                }
            }
            EjercicioMatrices mt=new EjercicioMatrices();  
            mt.imprimirContenidoMatrizCadena(matriz);        
        }
    public void transformada21(int dimen, int numInit) {
        String[][] matriz=new String[dimen][dimen];// f = Fila; j=Columna
        for (int c = 0; c < matriz[0].length; c++) {
            if (c%2==0) {
                for (int f = 0; f < matriz.length; f++) {
                    matriz[f][c]=""+numInit;
                    numInit++;
                }
            } else {
                for (int f = matriz.length-1; f >=0 ; f--) {
                    matriz[i][c]=""+numInit;
                    numInit++;
                }                
            } 
        
        TransformadasM tm=new TransformadasM();  
        tm.imprimirContenidoMatrizCadena(matriz);
        }
